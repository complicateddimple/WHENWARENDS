
import React, { useState, useEffect } from 'react';
import { getAnalysis } from './services/geminiService';
import type { AnalysisResult } from './types';
import Loader from './components/Loader';
import KeyFactorCard from './components/KeyFactorCard';
import ProbabilityBar from './components/ProbabilityBar';
import ForecastBar from './components/ForecastBar';

const App: React.FC = () => {
  const [analysis, setAnalysis] = useState<AnalysisResult | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);
  const [showContent, setShowContent] = useState<boolean>(false);

  useEffect(() => {
    const runAnalysis = async () => {
      setIsLoading(true);
      setError(null);
      try {
        // News fetching is disabled on deployment.
        // getAnalysis now calls our secure Netlify Function and doesn't need arguments.
        const result = await getAnalysis();
        setAnalysis(result);
        setIsLoading(false);
        setShowContent(true);
      } catch (err) {
        let errorMessage = 'An unknown error occurred.';
        if (err instanceof Error) {
          // The error message from the service is now more descriptive.
          errorMessage = err.message;
        }
        console.error("Analysis failed:", errorMessage);
        // The error from the service is already quite descriptive.
        setError(`${errorMessage} Please check your API keys and network connection.`);
        setIsLoading(false);
      }
    };

    runAnalysis();
  }, []);

  const renderContent = () => {
    if (isLoading) {
      return <Loader />;
    }

    if (error) {
      return (
        <div className="text-center text-red-400 bg-red-900/20 border border-red-500 p-6 rounded-lg">
          <h2 className="text-2xl font-bold mb-2">Analysis Error</h2>
          <p>{error}</p>
        </div>
      );
    }

    if (analysis) {
      return (
        <div className={`transition-opacity duration-1000 ${showContent ? 'opacity-100' : 'opacity-0'}`}>
          <div className="space-y-16">
            <section className="text-center">
              <h2 className="text-2xl md:text-3xl font-bold text-gray-400 tracking-widest mb-6">
                FORECASTED END OF WAR
              </h2>
              <ForecastBar prediction={analysis.prediction} />
            </section>
            
            <section>
              <h2 className="text-xl md:text-2xl font-semibold text-center text-gray-300 mb-8">KEY FACTORS IMPACTING DEVELOPMENT</h2>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {analysis.keyFactors.map((factor, index) => (
                  <KeyFactorCard key={index} factor={factor} />
                ))}
              </div>
            </section>

            <section>
                <h2 className="text-2xl md:text-3xl font-bold text-gray-400 tracking-widest text-center mb-8">
                    LONG-TERM OUTCOME PROBABILITY
                </h2>
                <ProbabilityBar probabilities={analysis.probabilities} />
            </section>

          </div>
        </div>
      );
    }

    return null;
  };

  return (
    <div className="min-h-screen bg-[#050608] text-gray-200 p-4 sm:p-6 md:p-12">
      <main className="max-w-7xl mx-auto">
        <header className="text-center mb-12 md:mb-20">
            <h1 className="text-4xl md:text-5xl font-bold tracking-tighter text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-yellow-300">
                Ukraine War: Endgame Analysis
            </h1>
            <p className="text-gray-500 mt-2">AI-POWERED FORECAST BASED ON PUBLIC DATA AS OF {new Date().toLocaleDateString()}</p>
        </header>
        
        <div className="min-h-[50vh] flex items-center justify-center">
            {renderContent()}
        </div>

        <footer className="text-center text-gray-600 mt-20 text-sm">
            <p>Disclaimer: This analysis is generated by an AI model based on public news data and does not constitute financial or political advice.</p>
            <p>The prediction is speculative and for informational purposes only.</p>
        </footer>
      </main>
    </div>
  );
};

export default App;